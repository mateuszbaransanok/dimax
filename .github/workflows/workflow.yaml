name: CI Pipeline

on:
  release:
    types: [published]    # Only trigger on published releases
  pull_request:           # Run tests on pull requests
    branches:
      - "**"              # Runs on any pull request branch

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NAME: [black, isort, flake, mypy]  # Run each linter in parallel

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install tox
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --quiet --upgrade --upgrade-strategy eager tox

      - name: Run static analysis with tox
        run: |
          . venv/bin/activate
          tox -e ${{ matrix.NAME }}

  unittests:
    runs-on: ubuntu-latest
    needs: static_analysis  # Run unittests after static analysis

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install tox
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --quiet --upgrade --upgrade-strategy eager tox

      - name: Run unit tests with tox
        run: |
          . venv/bin/activate
          tox -e unittests

  deploy:
    runs-on: ubuntu-latest
    needs: [static_analysis, unittests]  # Run deploy only after all tests succeed
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.11.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}